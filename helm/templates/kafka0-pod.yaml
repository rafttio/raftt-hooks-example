{{ if .Values.kafka.enable }}
apiVersion: v1
kind: Pod
metadata:
  name: kafka0
  labels:
    app.kubernetes.io/name: kafka0
spec:
  containers:
  - name: kafka0
    image: {{ .Values.kafka.broker.image }}:{{ .Values.kafka.tag }}
    env:
      - name: KAFKA_BROKER_ID
        value: "1"
      - name: KAFKA_ZOOKEEPER_CONNECT
        value: {{ .Values.kafkaZookeeper }}
      - name: KAFKA_ADVERTISED_LISTENERS
        value: "PLAINTEXT://{{ .Values.kafkaBroker }},PLAINTEXT_HOST://localhost:9092"
      - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      - name: KAFKA_INTER_BROKER_LISTENER_NAME
        value: "PLAINTEXT"
      - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: "1"
      - name: JMX_PORT
        value: "9997"
      - name: KAFKA_JMX_OPTS
        value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka0 -Dcom.sun.management.jmxremote.rmi.port=9997"
  initContainers:
    - name: init-zookeeper
      image: {{ .Values.kafka.broker.image }}:{{ .Values.kafka.tag }}
      command: [ 'sh', '-c', "until echo srvr | nc `echo ${KAFKA_ZOOKEEPER_CONNECT//:/ }`; do echo waiting for kafka; sleep 1; done" ]
      env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: {{ .Values.kafkaZookeeper }}
{{ end }}